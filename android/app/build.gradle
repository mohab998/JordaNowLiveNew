plugins {
    id 'com.android.application'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}
def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }
android {
    namespace = "com.example.jordannow"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.tv.jordannow"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

     signingConfigs {
               release {
                      keyAlias keystoreProperties['keyAlias']
                       keyPassword keystoreProperties['keyPassword']
                       storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                       storePassword keystoreProperties['storePassword']
                   }
           }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so `flutter run --release` works.
                     signingConfig signingConfigs.debug
                     signingConfig signingConfigs.release
        }
    }
}


flutter {
    source = "../.."
}
dependencies{
    implementation platform('com.google.firebase:firebase-bom:33.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.16.1'
    implementation 'com.android.support:leanback-v17:28.0.0'

}
